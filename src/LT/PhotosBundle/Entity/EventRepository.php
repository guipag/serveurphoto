<?php

namespace LT\PhotosBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends EntityRepository
{
    public function findThisYear() {
	$qb    = $this->createQueryBuilder('a');
	$date  = new \DateTime(null, new \DateTimeZone('Europe/Paris'));

	$date1 = \DateTime::createFromFormat('d/m', '01/08');
	$date2 = \DateTime::createFromFormat('d/m', '01/01');

	$begin = new \DateTime();
	$end   = new \DateTime();

	if ($date > $date2 && $date < $date1) { //date comprise entre janvier et aout de l'année civile en cours
	    $begin = clone $date->modify('first day of August'); //l'année commence le premier aout...
	    $begin->modify('-1 year'); //...de l'année précédente
	    $end   = clone $date->modify('last day of July'); //l'année se termine fin juillet
	}
	else {
	    $begin = clone $date->modify('first day of August'); //l'année a commencé en aout
	    $end   = clone $date->modify('last day of July'); //et se terminera fin juillet...
	    $end->modify('+1 year'); //...de l'année suivante
	}

	$qb->where('a.date > :begin')
	   ->andWhere('a.date < :end') 
           ->setParameter('begin', $begin)
	   ->setParameter('end', $end)
           ->orderBy('a.date', 'DESC')
        ;

	return $qb->getQuery()->getResult();
    }

    public function findByScolarYear($year1, $year2) {
	$qb = $this->createQueryBuilder('a');
	$date1 = \DateTime::createFromFormat('d/m/Y', '01/08/'.$year1);
	$date2 = \DateTime::createFromFormat('d/m/Y', '31/07/'.$year2);

	$qb->where('a.date > :begin')
	   ->andWhere('a.date < :end')
	   ->setParameter('begin', $date1)
	   ->setParameter('end', $date2)
	   ->orderBy('a.date', 'DESC')
	;

	return $qb->getQuery()->getResult();
    }

    public function findAllDateDesc() {
	$qb = $this->createQueryBuilder('a');

	$qb->orderBy('a.date', 'DESC');

	return $qb->getQuery()->getResult();
    }

    public function findAllTags() {
	$qb = $this->createQueryBuilder('a');

	$qb->leftJoin('a.photos', 'pho')
	   ->leftJoin('pho.tags', 'tag')
           ->addSelect('tag');

	return $qb
	  ->getQuery()
	  ->getResult();
    }
}
